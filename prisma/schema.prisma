// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Slicer {
  id            Int      @id
  // createdAt     DateTime @default(now()) @map(name: "created_at")
  name          String?
  description   String?
  external_url  String?
  address       String?
  image         String?
  tags          String?
  isImmutable   Boolean?
  config        Json        @default("{\"sponsors\": true}")
  sponsors      Json        @default("{ }")
  attributes    Json[]
  products      Product[]
}

model Product {
  id               Int      @default(autoincrement()) @id
  productId        Int?     @map(name: "product_id")
  createdAt        DateTime @default(now()) @map(name: "created_at")
  name             String
  shortDescription String?
  description      String
  creator          String
  uid              String
  hash             String
  image            String?
  texts            Json     @default("{}")
  purchaseInfo     Json     @default("{}")
  allowedAddresses String[]
  tempProductHash  String?
  isRemoved        Boolean  @default(false)
  shortcode        Shortcode?
  slicer           Slicer   @relation(fields: [slicerId], references: [id])
  slicerId         Int      @map(name: "slicer_id")
  
  @@index([productId], name:"productId")
  @@index([slicerId], name:"slicerId")
  // @unique(shortcodes, name: "slicerNameVersion")
  // @@unique([slicerId, name, version], name: "slicerNameVersion")
}

model Revert {
  id            Int      @default(autoincrement()) @id
  hash          String
  service       String   @default("web3Storage")
}

model Shortcode {
  id               Int           @default(autoincrement())      @id
  product          Product       @relation(fields: [productId], onDelete: Cascade, references: [id])
  productId        Int           @unique
  availableCodes   Json          @default("{}")
  accountCodes     AccountCode[]
}

model AccountCode {
  id               Int       @default(autoincrement()) @id
  buyerAddress     String
  appliedCodes     Json      @default("{}")
  shortcode        Shortcode @relation(fields: [shortcodeId], references: [id])
  shortcodeId      Int       @map(name: "shortcode_id")
 
  // @@index([shortcodeId], name:"shortcodeId")
  // @@index([buyerAddress], name:"buyerAddress")
}

model Currency {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  name      String
  symbol    String
  logo      String?
  quote     Float?
  cmcId     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([address], type: Hash)
}